<?php

namespace App\Livewire\Professional;

use App\Models\Professional\ProfessionalService as ProfessionalService;
use App\Models\Service;
use App\Models\ServiceCategory;
use App\Rules\WordCount;
use Livewire\Component;
use Ramsey\Uuid\Type\Decimal;
use Ramsey\Uuid\Type\Integer;

class Services extends Component
{
    public $categories = [];
    public $services = [];

    public string $selectedCategory;
    public string $selectedService;
    public string $selectedTimeFrom;
    public string $selectedTimeTo;
    public string $price;
    public string $serviceDescription;

    protected $rules = [
        'selectedCategory' => 'required',
        'selectedService' => 'required',
        'selectedTimeFrom' => 'required',
        'selectedTimeTo' => 'required',
        'price' => 'required|numeric|gt:0',
        'serviceDescription' => ['required', 'min:10', 'max:100'],
    ];

    public function updated($property){
        $this->validateOnly($property);
    }


    public function mount(){
        $this->categories = ServiceCategory::all();
    }

    public function changeCategory(){
        if($this->selectedCategory != -1){
            $this->services = Service::where('service_category_id', $this->selectedCategory)->get();
        }
    }

    public function render()
    {
        return view('livewire.professional.services');
    }

    public function submit(){
        // $this->validate([
        //     'selectedCategory' => 'required', // Add validation rules for other fields
        //     'selectedService' => 'required',
        //     'selectedTimeFrom' => 'required',
        //     'selectedTimeTo' => 'required',
        //     'price' => 'required|numeric',
        //     'serviceDescription' => ['required', new WordCount(50)],
        // ]);

        $this->validate();
        ProfessionalService::create([
            'service_category_id' => $this->selectedCategory,
            'service_id' => $this->selectedService,
            'business_hours_start' => $this->selectedTimeFrom .'am' ,
            'business_hours_end' => $this->selectedTimeTo . 'pm',
            'price' => $this->price,
            'description' => $this->serviceDescription,
            'professional_id' => auth()->user()->professional->id,
        ]);
        $this->reset();

        session()->flash('success', 'Services added successfully!!');
        // $this->resetForm();
        
    }

    // private function resetForm()
    // {
    //     $this->selectedCategory = '';
    //     $this->selectedService = '';
    //     $this->selectedTimeFrom = '';
    //     $this->selectedTimeTo = '';
    //     $this->price = '';
    //     $this->serviceDescription = '';
    // }

   


    
}
